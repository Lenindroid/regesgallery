* { /*Selects all elements*/
    box-sizing: border-box; /*Normalizes the box model*/
}

.gallery img { /*Seems to be a selector to all img elements in the elements with gallery class.*/
    width: 100%;
    max-width: 350px;
    height: 300px;
    object-fit: cover; /*determine how images should behave, in this case it will tell the image to fill the img container while maintaining aspect ratio*/
    border-radius: 10px;
}

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}

.header {
    text-align: center;
    text-transform: uppercase; /*Transform the text into uppercase.*/
    padding: 32px;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
}

.gallery {
    display: flex;
    /*This will make the element a flex container. Any direct children of a flex container are called flex items.*/
    flex-direction: row;
    /*Flexbox has a main and cross axis. The main axis is defined by the flex-direction property, which has four possible values:
        row (default): horizontal axis with flex items from left to right
        row-reverse: horizontal axis with flex items from right to left
        column: vertical axis with flex items from top to bottom
        column-reverse: vertical axis with flex items from bottom to top*/
    flex-wrap: wrap; /*determines how your flex items behave when the flex container is too small.*/
    justify-content: center; /*determines how the items inside a flex container are positioned along the main axis, affecting their position and the space around them.*/
    align-items: center;/*property positions the flex content along the cross axis.*/
    padding: 20px 10px;
    max-width: 1400px;
    margin: 0 auto;
    gap: 16px; /*sets the gaps, also knowns as gutters, between rows and columns*/
}

.gallery::after { /*The ::after pseudo-element creates an element that is the last child of the selected element.*/
    content: "";
    width: 350px;
}


